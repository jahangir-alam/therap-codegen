package ${PACKAGE_NAME}


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

${IMPORTS}

@Repository
public class ${CLASS_NAME}Service {

    private static final Logger log = LoggerFactory.getLogger(${CLASS_NAME}Service.class);

    @PersistenceContext(unitName = "emf")
    private EntityManager em;

    ${FIELDS}

    ${METHODS}

    private ${CLASS_NAME} doSave(${CLASS_NAME} ${CLASS_INSTANCE_NAME}, Action action, String comments) {

        ${CLASS_INSTANCE_NAME}.setStatus(WorkflowManager.getNextStatus(FormType.${WORKFLOW_FORM_TYPE}, ${CLASS_INSTANCE_NAME}.getStatus(), action));

        if (${CLASS_INSTANCE_NAME}.getId() > 0) {
            ${CLASS_INSTANCE_NAME}.setUpdatedBy(UserContext.getLogin());
            ${CLASS_INSTANCE_NAME}.setUpdated(new Date());
            ${CLASS_INSTANCE_NAME} = em.merge(${CLASS_INSTANCE_NAME});
        } else {
            em.persist(${CLASS_INSTANCE_NAME});
        }

        em.flush();

        archiverService.archive(${CLASS_INSTANCE_NAME}, UserContext.getLogin(), ${CLASS_INSTANCE_NAME}.getTz());

        eventPublisher.publish(
                CommonForm.${FT_FORM_TYPE},
                ${CLASS_INSTANCE_NAME}.getFormId(),
                action.name(),
                ${CLASS_INSTANCE_NAME}.getClient().getId(),
                null,
                ${CLASS_INSTANCE_NAME}.getProvider().getId(),
                null,
                null,
                comments,
                null
        );

        return ${CLASS_INSTANCE_NAME};
    }
}
